name: Bump Version

on:
  workflow_run:
    workflows: ["Prepare Version Bump"]
    types:
      - completed

jobs:
  check-previous-workflow:
    runs-on: ubuntu-latest
    steps:
      - name: Check if previous workflow was successful
        run: |
          if [[ "${{ github.event.workflow_run.conclusion }}" != "success" ]]; then
            echo "Previous workflow was not successful." >> $GITHUB_STEP_SUMMARY
            echo "outcome=Previous workflow was not successful." >> $GITHUB_OUTPUT
            exit 1
          fi
        shell: bash

  check-token:
    runs-on: ubuntu-latest
    steps:
      - name: Check PAT
        run: |
          if [[ -z "${{ secrets.PAT }}" ]]; then
            echo "PAT is not set." >> $GITHUB_STEP_SUMMARY
            echo "outcome=PAT is not set." >> $GITHUB_OUTPUT
            exit 1
          else
            echo "PAT is set." >> $GITHUB_STEP_SUMMARY
            echo "outcome=PAT is set." >> $GITHUB_OUTPUT
          fi
        shell: bash

  download-artifact:
    needs: [check-previous-workflow, check-token]
    runs-on: ubuntu-latest
    steps:
      - name: Download version artifact
        uses: actions/download-artifact@v2
        with:
          name: version-${{ github.event.workflow_run.id }}
          path: .
      - name: Check if version.txt exists
        run: |
          if [[ ! -f version.txt ]]; then
            echo "version.txt does not exist." >> $GITHUB_STEP_SUMMARY
            echo "outcome=version.txt does not exist." >> $GITHUB_OUTPUT
            exit 1
          else
            echo "version.txt exists." >> $GITHUB_STEP_SUMMARY
            echo "outcome=version.txt exists." >> $GITHUB_OUTPUT
          fi
        shell: bash

  bump-and-push-version:
    needs: [check-token, download-artifact]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT }}

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: Bump Version
        id: bump
        run: |
          VERSION_TYPE=$(cat version.txt)
          npm version $VERSION_TYPE --no-git-tag-version
          VERSION=$(node -p "require('./package.json').version")
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git commit -am "Bump version to $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        shell: bash

      - name: Push changes
        run: |
          git push origin main
          git tag v${{ steps.bump.outputs.version }}
          git push origin v${{ steps.bump.outputs.version }}
        env:
          PAT: ${{ secrets.PAT }}
